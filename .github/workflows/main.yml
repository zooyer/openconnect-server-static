name: Build container(s) & Upload Artifacts

on:
  workflow_dispatch:

jobs:
  build-container-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout from GitHub
        uses: actions/checkout@v4
        
      - name: Setup qemu
        uses: docker/setup-qemu-action@v3
        
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get latest tag
        id: get_tag
        run: |
          # Try to get the latest tag, if none exists, start from v0.0.1
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.1")
          echo "Latest tag: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          # Extract the version numbers and remove the "v" prefix
          VERSION=${{ env.LATEST_TAG }}
          VERSION=${VERSION#v}  # Remove the "v" prefix
          
          # Split the version string into an array
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          
          # Increment the patch version (third number)
          PATCH=$((VERSION_PARTS[2] + 1))
          
          # Construct new version
          NEW_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          echo "New tag: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git tag -a ${{ env.NEW_VERSION }} -m "Release version ${{ env.NEW_VERSION }}"
          git push origin ${{ env.NEW_VERSION }}
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ env.NEW_VERSION }}
          
      - name: Extract docker build artifacts
        run: |
          ./extract-artifacts.sh ghcr.io/${{ github.repository }}
          
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
